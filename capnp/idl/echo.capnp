# Cap'n proto definition for the echo service
@0xcd6ed2180540008c;  # unique file ID, generated by `capnp id`

using Go = import "/go.capnp";
# Golang standard definitions
$Go.package("echo");
# The generated code will have the package name 'echo'

$Go.import("github.com/hiveot/echorpc/pkg/capnp/echo");
# Declares the full import path of this package for go.
# This is used by the compiler to generate a go import statement in another package when importing the go code of this package.

struct EchoStats {
# Echo statistic being tracked by the service

  latest @0 :Text;
  # The latest echo

  count @1 :UInt32;
  # Number of echos received

}


interface EchoService {
# Add 'Cap' to the name to distinguish it from the EchoService itself and the capnp adapter
# Comments are shown below the declaration.

  echo @0 (text:Text) -> (echoText: Text);
  # Return an copy of the text
  
  latest @1 () -> (echoText: Text);
  # Return the latest echo text

  stats @2 () -> (stats: EchoStats);
  # return the statistics of echo
}

interface EchoBootstrap {
# Bootstrap to get a hold of the echo service. Intended to test security through 'capabilities' concept.
    
    getEcho @0 () -> (service :EchoService);
    # Obtain the capability to Echo

}

